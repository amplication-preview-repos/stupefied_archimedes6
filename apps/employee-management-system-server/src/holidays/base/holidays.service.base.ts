/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Holidays as PrismaHolidays } from "@prisma/client";

export class HolidaysServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.HolidaysCountArgs, "select">): Promise<number> {
    return this.prisma.holidays.count(args);
  }

  async holidaysItems(
    args: Prisma.HolidaysFindManyArgs
  ): Promise<PrismaHolidays[]> {
    return this.prisma.holidays.findMany(args);
  }
  async holidays(
    args: Prisma.HolidaysFindUniqueArgs
  ): Promise<PrismaHolidays | null> {
    return this.prisma.holidays.findUnique(args);
  }
  async createHolidays(
    args: Prisma.HolidaysCreateArgs
  ): Promise<PrismaHolidays> {
    return this.prisma.holidays.create(args);
  }
  async updateHolidays(
    args: Prisma.HolidaysUpdateArgs
  ): Promise<PrismaHolidays> {
    return this.prisma.holidays.update(args);
  }
  async deleteHolidays(
    args: Prisma.HolidaysDeleteArgs
  ): Promise<PrismaHolidays> {
    return this.prisma.holidays.delete(args);
  }
}
