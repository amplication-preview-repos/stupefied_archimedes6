/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PaymentDetails as PrismaPaymentDetails,
  Payments as PrismaPayments,
} from "@prisma/client";

export class PaymentDetailsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentDetailsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentDetails.count(args);
  }

  async paymentDetailsItems(
    args: Prisma.PaymentDetailsFindManyArgs
  ): Promise<PrismaPaymentDetails[]> {
    return this.prisma.paymentDetails.findMany(args);
  }
  async paymentDetails(
    args: Prisma.PaymentDetailsFindUniqueArgs
  ): Promise<PrismaPaymentDetails | null> {
    return this.prisma.paymentDetails.findUnique(args);
  }
  async createPaymentDetails(
    args: Prisma.PaymentDetailsCreateArgs
  ): Promise<PrismaPaymentDetails> {
    return this.prisma.paymentDetails.create(args);
  }
  async updatePaymentDetails(
    args: Prisma.PaymentDetailsUpdateArgs
  ): Promise<PrismaPaymentDetails> {
    return this.prisma.paymentDetails.update(args);
  }
  async deletePaymentDetails(
    args: Prisma.PaymentDetailsDeleteArgs
  ): Promise<PrismaPaymentDetails> {
    return this.prisma.paymentDetails.delete(args);
  }

  async getPayment(parentId: string): Promise<PrismaPayments | null> {
    return this.prisma.paymentDetails
      .findUnique({
        where: { id: parentId },
      })
      .payment();
  }
}
